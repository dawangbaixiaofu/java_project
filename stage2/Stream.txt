流就是一系列的数据

IO分为流IO和块IO
流IO的好处是简单易用，缺点是效率较低。块IO效率很高，但编程比较复杂。

电脑上的数据有三种存储方式，一种是外存，一种是内存，一种是缓存。
缓存在CPU内
外存的数据的读取最慢，其次是内存，缓存最快；
 标准输入输出，文件的操作，网络上的数据流，
 字符串流，对象流，zip文件流等等，java中将输入输出抽象称为流，
 就好像水管，将两个容器连接起来。将数据从外存中读取到内存中的称为输入流，
 将数据从内存写入外存中的称为输出流。


当不同的介质之间有数据交互的时候，JAVA就使用流来实现。
数据源可以是文件，还可以是数据库，网络甚至是其他的程序
比如读取文件的数据到程序中，站在程序的角度来看，就叫做输入流
输入流： InputStream
输出流：OutputStream

一、根据流向分为输入流和输出流
二、根据传输数据单位分为字节流和字符流
	字节流：OutputStream、InputStream
	字符流：Writer、Reader
	1个字符 = 2个字节
三、根据功能分为节点流和包装流
四、一些特别的的流类型
	转换流：转换流只有字节流转换为字符流。
	InputStreamReader:把字节输入流转换为字符输入流
	OutputStreamWriter:把字节输出流转换为字符输出流
	缓冲流：有关键字Buffered，也是一种处理流，为其包装的流增加了缓存功能
	字节内存流：ByteArrayOutputStream 、ByteArrayInputStream
	字符内存流：CharArrayReader、CharArrayWriter
	字符串流：StringReader,StringWriter（把数据临时存储到字符串中）
	
	对象流（序列化与反序列化）：有关键字Object，主要用于将目标对象保存到磁盘中或允许在网络中
		直接传输对象时使用（对象序列化）
	序列化：指把堆内存中的 Java 对象数据，通过某种方式把对象存储到磁盘文件中
		或者传递给其他网络节点（在网络上传输）。这个过程称为序列化。
		通俗来说就是将数据结构或对象转换成二进制串的过程。
		
		1.需要做序列化的对象的类，必须实现序列化接口：Java.lang.Serializable 接口;
		2.底层会判断，如果当前对象是 Serializable 的实例，才允许做序列化，
		  Java对象 instanceof Serializable 来判断。
		3.在 Java 中使用对象流来完成序列化和反序列化
		  ObjectOutputStream:通过 writeObject()方法做序列化操作
		  ObjectInputStream:通过 readObject() 方法做反序列化操作

	反序列化：把磁盘文件中的对象数据或者把网络节点上的对象数据，恢复成Java对象模型的过程。
		也就是将在序列化过程中所生成的二进制串转换成数据结构或者对象的过程
		ObjectInputStream:通过 readObject() 方法做反序列化操作
	
	合并流：把多个输入流合并为一个流，也叫顺序流，因为在读取的时候是先读第一个，读完了在读下面一个流。
	SequenceInputStream(new FileInputStream("io/a.txt"), new FileInputStream("io/b.txt"));


操作 IO 流的模板：
	1.创建源或目标对象
	2.创建 IO 流对象
	3.具体的 IO 操作
	4.关闭资源

标准输入输出IO
System.out
System.in



File类
File类提供了描述文件和目录的操作与管理方法。
File 类只能操作文件的属性，文件的内容是不能操作的。


数据流？和编码
	DataInputStream 数据输入流
	DataOutputStream 数据输出流
